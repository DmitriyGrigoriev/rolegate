{
  "info": {
    "name": "Auth System API",
    "description": "Коллекция запросов для тестирования системы аутентификации и авторизации",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8000/api",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "refresh_token",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"SecurePass123!\",\n  \"password_confirm\": \"SecurePass123!\",\n  \"first_name\": \"Иван\",\n  \"last_name\": \"Иванов\",\n  \"middle_name\": \"Иванович\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register/",
              "host": ["{{base_url}}"],
              "path": ["auth", "register", ""]
            }
          }
        },
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const jsonData = pm.response.json();",
                  "    pm.collectionVariables.set('access_token', jsonData.tokens.access_token);",
                  "    pm.collectionVariables.set('refresh_token', jsonData.tokens.refresh_token);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@example.com\",\n  \"password\": \"Admin123!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login/",
              "host": ["{{base_url}}"],
              "path": ["auth", "login", ""]
            }
          }
        },
        {
          "name": "Get Current User",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/me/",
              "host": ["{{base_url}}"],
              "path": ["auth", "me", ""]
            }
          }
        },
        {
          "name": "Update Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"first_name\": \"Петр\",\n  \"last_name\": \"Петров\",\n  \"middle_name\": \"Петрович\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/me/",
              "host": ["{{base_url}}"],
              "path": ["auth", "me", ""]
            }
          }
        },
        {
          "name": "Refresh Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const jsonData = pm.response.json();",
                  "    pm.collectionVariables.set('access_token', jsonData.tokens.access_token);",
                  "    pm.collectionVariables.set('refresh_token', jsonData.tokens.refresh_token);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refresh_token\": \"{{refresh_token}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/refresh/",
              "host": ["{{base_url}}"],
              "path": ["auth", "refresh", ""]
            }
          }
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/logout/",
              "host": ["{{base_url}}"],
              "path": ["auth", "logout", ""]
            }
          }
        },
        {
          "name": "Delete Account",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/me/",
              "host": ["{{base_url}}"],
              "path": ["auth", "me", ""]
            }
          }
        }
      ]
    },
    {
      "name": "Users (Admin)",
      "item": [
        {
          "name": "List Users",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/users/",
              "host": ["{{base_url}}"],
              "path": ["users", ""]
            }
          }
        },
        {
          "name": "Get User",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/users/1/",
              "host": ["{{base_url}}"],
              "path": ["users", "1", ""]
            }
          }
        },
        {
          "name": "Assign Role",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"role_id\": 2\n}"
            },
            "url": {
              "raw": "{{base_url}}/users/2/assign-role/",
              "host": ["{{base_url}}"],
              "path": ["users", "2", "assign-role", ""]
            }
          }
        },
        {
          "name": "Revoke Role",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/users/2/roles/2/",
              "host": ["{{base_url}}"],
              "path": ["users", "2", "roles", "2", ""]
            }
          }
        }
      ]
    },
    {
      "name": "Roles (Admin)",
      "item": [
        {
          "name": "List Roles",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/roles/",
              "host": ["{{base_url}}"],
              "path": ["roles", ""]
            }
          }
        },
        {
          "name": "Create Role",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Модератор\",\n  \"code\": \"moderator\",\n  \"description\": \"Модерация контента\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/roles/",
              "host": ["{{base_url}}"],
              "path": ["roles", ""]
            }
          }
        }
      ]
    },
    {
      "name": "Access Rules (Admin)",
      "item": [
        {
          "name": "List Access Rules",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/access-rules/",
              "host": ["{{base_url}}"],
              "path": ["access-rules", ""]
            }
          }
        },
        {
          "name": "Create Access Rule",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"role\": 2,\n  \"element\": 1,\n  \"read_permission\": true,\n  \"read_all_permission\": false,\n  \"create_permission\": true,\n  \"update_permission\": true,\n  \"update_all_permission\": false,\n  \"delete_permission\": false,\n  \"delete_all_permission\": false\n}"
            },
            "url": {
              "raw": "{{base_url}}/access-rules/",
              "host": ["{{base_url}}"],
              "path": ["access-rules", ""]
            }
          }
        },
        {
          "name": "Update Access Rule",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"role\": 2,\n  \"element\": 1,\n  \"read_permission\": true,\n  \"read_all_permission\": true,\n  \"create_permission\": true,\n  \"update_permission\": true,\n  \"update_all_permission\": false,\n  \"delete_permission\": true,\n  \"delete_all_permission\": false\n}"
            },
            "url": {
              "raw": "{{base_url}}/access-rules/1/",
              "host": ["{{base_url}}"],
              "path": ["access-rules", "1", ""]
            }
          }
        }
      ]
    },
    {
      "name": "Mock Products",
      "item": [
        {
          "name": "List Products",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/mock/products/",
              "host": ["{{base_url}}"],
              "path": ["mock", "products", ""]
            }
          }
        },
        {
          "name": "Get Product",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/mock/products/1/",
              "host": ["{{base_url}}"],
              "path": ["mock", "products", "1", ""]
            }
          }
        },
        {
          "name": "Create Product",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Новый продукт\",\n  \"price\": 5000\n}"
            },
            "url": {
              "raw": "{{base_url}}/mock/products/",
              "host": ["{{base_url}}"],
              "path": ["mock", "products", ""]
            }
          }
        },
        {
          "name": "Update Product",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Обновленный продукт\",\n  \"price\": 7000\n}"
            },
            "url": {
              "raw": "{{base_url}}/mock/products/1/",
              "host": ["{{base_url}}"],
              "path": ["mock", "products", "1", ""]
            }
          }
        },
        {
          "name": "Delete Product",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/mock/products/1/",
              "host": ["{{base_url}}"],
              "path": ["mock", "products", "1", ""]
            }
          }
        }
      ]
    },
    {
      "name": "Mock Stores",
      "item": [
        {
          "name": "List Stores",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/mock/stores/",
              "host": ["{{base_url}}"],
              "path": ["mock", "stores", ""]
            }
          }
        }
      ]
    },
    {
      "name": "Mock Orders",
      "item": [
        {
          "name": "List Orders",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/mock/orders/",
              "host": ["{{base_url}}"],
              "path": ["mock", "orders", ""]
            }
          }
        }
      ]
    }
  ]
}
