# Generated by Django 5.2.7 on 2025-10-29 14:54

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BusinessElement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название')),
                ('code', models.CharField(db_index=True, help_text='Уникальный код элемента (users, products, stores, orders, access_rules)', max_length=50, unique=True, verbose_name='Код')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Бизнес-элемент',
                'verbose_name_plural': 'Бизнес-элементы',
                'db_table': 'business_elements',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название')),
                ('code', models.CharField(db_index=True, help_text='Уникальный код роли (admin, manager, user, guest)', max_length=50, unique=True, verbose_name='Код')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Роль',
                'verbose_name_plural': 'Роли',
                'db_table': 'roles',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True, verbose_name='Email адрес')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='Фамилия')),
                ('middle_name', models.CharField(blank=True, max_length=150, verbose_name='Отчество')),
                ('is_active', models.BooleanField(default=True, help_text='Указывает, активен ли пользователь. Отключите вместо удаления.', verbose_name='Активный')),
                ('is_staff', models.BooleanField(default=False, help_text='Указывает, может ли пользователь входить в админ-панель.', verbose_name='Статус персонала')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('groups', models.ManyToManyField(blank=True, help_text='Группы, к которым принадлежит пользователь.', related_name='custom_user_set', related_query_name='custom_user', to='auth.group', verbose_name='Группы')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Конкретные права этого пользователя.', related_name='custom_user_set', related_query_name='custom_user', to='auth.permission', verbose_name='Права пользователя')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'db_table': 'users',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AccessRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('read_permission', models.BooleanField(default=False, help_text='Может читать объекты, которые создал сам', verbose_name='Чтение своих объектов')),
                ('read_all_permission', models.BooleanField(default=False, help_text='Может читать все объекты', verbose_name='Чтение всех объектов')),
                ('create_permission', models.BooleanField(default=False, help_text='Может создавать новые объекты', verbose_name='Создание')),
                ('update_permission', models.BooleanField(default=False, help_text='Может обновлять объекты, которые создал сам', verbose_name='Обновление своих объектов')),
                ('update_all_permission', models.BooleanField(default=False, help_text='Может обновлять все объекты', verbose_name='Обновление всех объектов')),
                ('delete_permission', models.BooleanField(default=False, help_text='Может удалять объекты, которые создал сам', verbose_name='Удаление своих объектов')),
                ('delete_all_permission', models.BooleanField(default=False, help_text='Может удалять все объекты', verbose_name='Удаление всех объектов')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('element', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='access_rules', to='authentication.businesselement', verbose_name='Бизнес-элемент')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='access_rules', to='authentication.role', verbose_name='Роль')),
            ],
            options={
                'verbose_name': 'Правило доступа',
                'verbose_name_plural': 'Правила доступа',
                'db_table': 'access_rules',
                'ordering': ['role', 'element'],
                'constraints': [models.UniqueConstraint(fields=('role', 'element'), name='unique_role_element')],
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token_hash', models.CharField(db_index=True, help_text='SHA-256 хеш access токена', max_length=255, verbose_name='Хеш токена')),
                ('refresh_token_hash', models.CharField(db_index=True, help_text='SHA-256 хеш refresh токена', max_length=255, verbose_name='Хеш refresh токена')),
                ('expires_at', models.DateTimeField(db_index=True, verbose_name='Истекает')),
                ('refresh_expires_at', models.DateTimeField(verbose_name='Refresh истекает')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP адрес')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='Активна')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создана')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='authentication.user', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Сессия',
                'verbose_name_plural': 'Сессии',
                'db_table': 'sessions',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'is_active'], name='sessions_user_id_85103c_idx'), models.Index(fields=['token_hash', 'is_active'], name='sessions_token_h_48a903_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата назначения')),
                ('assigned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_roles', to='authentication.user', verbose_name='Назначил')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_roles', to='authentication.role', verbose_name='Роль')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_roles', to='authentication.user', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Роль пользователя',
                'verbose_name_plural': 'Роли пользователей',
                'db_table': 'user_roles',
                'ordering': ['-assigned_at'],
                'constraints': [models.UniqueConstraint(fields=('user', 'role'), name='unique_user_role')],
            },
        ),
    ]
